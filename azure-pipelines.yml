# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:
  azureSubscription: 'a1e74730-a9e8-4b13-94dd-ea6bc12a85dc'

  webAppName: 'CGIHelloWorldWebAPP'
  
  environmentName: 'CGIHelloWorldWebAPP'

  vmImageName: 'ubuntu latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool: $(vmImageName)

    steps:
    - task: Maven@3
      displayName: MavenPackage
      inputs:
        mavenPomFile: 'pom.xml'
    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: 'DevOpsCGIHelloWorld'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory'
        contents: '**/target/*.?(war|jar)'
        targetFolder: '$(build.artifactStagingDirectory)'
    - upload: $(build.artifactStagingDirectory)
      artifact: drop
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy: 
      runOnce: 
        deploy:
          steps:
            - task: AzureWebApp@1
              displayName: 'Azure web app Deploy CGIHelloWorldWebAPP'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: webAppLinux
                appName: $(webAppName)
                package: '$(Pipeline.workspace)/drop/**/target/*.?(war|jar)'
    
      
  
